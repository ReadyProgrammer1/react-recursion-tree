{"version":3,"sources":["components/richter/richter-input.jsx","components/richter/index.js","pages/Richter.js","components/data-tree/node-tree.jsx","components/data-tree/index.js","pages/DataTree.js","Router.js","components/navbar/index.js","App.js","index.js"],"names":["scaleNames","a","b","RichterInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","e","onMagnitudeChange","target","value","magnitudeA","magnitudeB","scale","react_default","createElement","style","width","onChange","React","Component","testNumber","magnitude","match","toString","MagnitudeResult","parseFloat","result","richterScale","num","toFixed","Number","isNaN","RichterCalculator","handleMagnitudeAChange","handleMagnitudeBChange","state","setState","testMagnitudeA","testMagnitudeB","marginLeft","marginTop","richter_input","Richter","richter","NodeTree","data","tree","filter","node","parent_id","topLevel","map","each","subcategories","traverse","parentId","children","forEach","child","id","buildTree","node_tree","TreeData","strBefore","JSON","stringify","categories","undefined","strAfter","display","verticalAlign","float","DataTree","data_tree","Router","Switch","Route","exact","path","component","pages_DataTree","NavBar","className","onClick","window","location","reload","NavLink","to","App","navbar","src_Router","ReactDOM","render","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8bb3062a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst scaleNames = {\r\n  a: 'A',\r\n  b: 'B'\r\n};\r\n\r\nclass RichterInput extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.props.onMagnitudeChange(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const magnitudeA = this.props.magnitudeA\r\n    const magnitudeB = this.props.magnitudeB\r\n    const scale = this.props.scale\r\n    return (\r\n      <fieldset style={{width: '240px'}}>\r\n        <legend>Enter magnitude {scaleNames[scale]}:</legend>\r\n        <input value={scaleNames[scale] === 'A' ? magnitudeA : magnitudeB}\r\n                onChange={this.handleChange} />\r\n      </fieldset>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RichterInput","import React from 'react'\r\nimport RichterInput from './richter-input'\r\n\r\nfunction testNumber(magnitude) {\r\n  if (!validate(magnitude)) {\r\n    return ''\r\n  }\r\n  //const rounded = Math.round(magnitude * 10) / 10\r\n  if (magnitude > 10) {\r\n    return ''\r\n  } else {\r\n    return magnitude.toString()\r\n  }\r\n}\r\n\r\nfunction validate(str) {\r\n  var rgx = /^[0-9]*\\.?[0-9]*$/\r\n  return str.match(rgx)\r\n}\r\n\r\nfunction isNumeric(num) {\r\n  return (num >=0 || num < 0);\r\n}\r\n\r\nfunction MagnitudeResult(props) {\r\n  const magnitudeA = parseFloat(props.magnitudeA)\r\n  const magnitudeB = parseFloat(props.magnitudeB)\r\n  if (magnitudeB > magnitudeA) {\r\n    return <p>Magnitude b cannot be greater than Magnitude A</p>\r\n  }\r\n  const result = richterScale(+magnitudeA.toFixed(2), +magnitudeB.toFixed(2))\r\n  return <div><p>A Magnitude {!Number.isNaN(magnitudeA) ? magnitudeA : ''} is&nbsp;\r\n    {!Number.isNaN(result) ? result : ''} times stronger than a Magnitude&nbsp; \r\n    {!Number.isNaN(magnitudeB) ? magnitudeB : ''} on the order of TNT.<br/><br/>\r\n    Actually the magnitude scale is logarithmic, so a magnitude 9.7 earthquake is 10 9.7 10 6.8 = 794.328 times<br/>\r\n    bigger on the seismogram than a magnitude 6.8 earthquake. The \"recursion conversion\" above gives a general<br/>\r\n    idea of the \"magnitude\" of the difference between scales as it relates to the destructive power of TNT.\r\n  </p></div>\r\n}\r\n\r\nfunction richterScale(magnitudeA, magnitudeB) {\r\n  if (!isNumeric(magnitudeA)) {\r\n    return ''\r\n  }\r\n  if (magnitudeA < 1) return\r\n  if (magnitudeA === 1) return 1\r\n  if (magnitudeA === magnitudeB) return 1\r\n  +magnitudeA.toFixed(2)\r\n  return +(magnitudeA * 10).toFixed(2) * richterScale(+(magnitudeA - 1).toFixed(2), +magnitudeB.toFixed(2))\r\n}\r\n\r\nclass RichterCalculator extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleMagnitudeAChange = this.handleMagnitudeAChange.bind(this)\r\n    this.handleMagnitudeBChange = this.handleMagnitudeBChange.bind(this)\r\n    this.state = {magnitudeA: '', magnitudeB: '', scale: ''}\r\n  }\r\n\r\n  handleMagnitudeAChange(magnitudeA) {\r\n    this.setState({scale: 'a', magnitudeA})\r\n  }\r\n\r\n  handleMagnitudeBChange(magnitudeB) {\r\n    this.setState({scale: 'b', magnitudeB})\r\n  }\r\n\r\n  render() {\r\n    const scale = this.state.scale\r\n    const magnitudeA = this.state.magnitudeA\r\n    const magnitudeB = this.state.magnitudeB\r\n    const testMagnitudeA = scale === 'a' ? testNumber(magnitudeA) : magnitudeA\r\n    const testMagnitudeB = scale === 'b' ? testNumber(magnitudeB) : magnitudeB\r\n\r\n    return (\r\n      <div style={{marginLeft: '100px', marginTop: '50px'}}>\r\n        <h1>Richter Scale Recursion</h1>\r\n        <h2>Magnitude A is how much stronger than Magnitude B?</h2>\r\n        <RichterInput\r\n          scale=\"a\"\r\n          magnitudeA={testMagnitudeA}\r\n          onMagnitudeChange={this.handleMagnitudeAChange} />\r\n\r\n        <RichterInput\r\n          scale=\"b\"\r\n          magnitudeB={testMagnitudeB}\r\n          onMagnitudeChange={this.handleMagnitudeBChange} />\r\n\r\n        <MagnitudeResult\r\n          magnitudeA={parseFloat(testMagnitudeA)}\r\n          magnitudeB={parseFloat(testMagnitudeB)} \r\n          scale={scale}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RichterCalculator","import React, { Component } from 'react'\r\nimport RichterCalculator from '../components/richter'\r\n\r\nclass Richter extends Component {\r\n  render() {\r\n    return (\r\n      <RichterCalculator />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Richter\r\n","import React from 'react'\r\n\r\nclass NodeTree extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data\r\n    const value = this.props.value\r\n    return (\r\n      <div>\r\n        <pre value={value}>{data}</pre>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NodeTree","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NodeTree from './node-tree.jsx'\r\nimport './styles.css'\r\n\r\nfunction topLevel(data) {\r\n  return data.filter(node => !node.parent_id)\r\n}\r\n\r\nfunction tree(data) {\r\n  return topLevel(data).map(each => {\r\n    each.subcategories = traverse(data, each.id)\r\n    return each\r\n  })\r\n}\r\n\r\nfunction traverse(data, parentId) {\r\n  const children = data.filter(each => each.parent_id === parentId)\r\n  children.forEach(child => {\r\n    child.subcategories = traverse(data, child.id)\r\n  })\r\n  return children\r\n}\r\n\r\nfunction buildTree(data, value) {\r\n  return <NodeTree data={data} value={value} />\r\n}\r\n\r\nclass TreeData extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n\r\n    const strBefore = JSON.stringify(this.props.categories, undefined, 4)\r\n    const strAfter = JSON.stringify(tree(this.props.categories), undefined, 4)\r\n\r\n    return (\r\n        <div style={{display: 'table'}}>\r\n          <div style={{display: 'table-cell', verticalAlign: 'middle', width: '80px'}}><p>&nbsp;</p></div>\r\n          <div style={{display: 'table-cell', verticalAlign: 'middle', width: '220px'}}>\r\n            <h1 style={{float: 'right'}}>Traverse JSON data array and transform into data tree via Recursion</h1>\r\n          </div>\r\n          <div style={{display: 'table-cell', verticalAlign: 'middle', width: '40px'}}><p>&nbsp;</p></div>\r\n          <div style={{display: 'table-cell', verticalAlign: 'middle'}}><p>{buildTree(strBefore, 'data before')}</p></div>\r\n          <div style={{display: 'table-cell', verticalAlign: 'middle', width: '120px'}}>\r\n            <p style={{float: 'right'}}>----------------></p>\r\n          </div>\r\n          <div style={{display: 'table-cell', verticalAlign: 'top'}}><p>{buildTree(strAfter, 'data after')}</p></div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TreeData","import React, { Component } from 'react'\r\nimport TreeData from '../components/data-tree'\r\nimport data from '../data/categories.json'\r\n\r\nclass DataTree extends Component {\r\n  render() {\r\n    return (\r\n      <TreeData categories={data.categories}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataTree\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Richter from '../src/pages/Richter'\r\nimport DataTree from '../src/pages/DataTree'\r\n\r\nconst Router = () => {\r\n    return <Switch>\r\n        <Route exact path='/react-recursion-tree' component={props => <DataTree {...props} />} />\r\n        <Route exact path='/richter' component={Richter} />\r\n    </Switch>\r\n}\r\n\r\nexport default Router","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './styles.css'\r\n\r\nfunction NavBar() {\r\n  function refreshPage(){ \r\n    //this is due to a glitch that I cannot figure out where the NodeTree component is being\r\n    //updated with incorrect data while at the same time being equal to null in componentWillMount()\r\n    //a total page refresh is the only fix I have found for this issue.\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <nav>\r\n      <ul className='top-menu'>\r\n      <li onClick={() => refreshPage()}><NavLink exact to='/react-recursion-tree'>Data Tree</NavLink></li>\r\n      <li><NavLink exact to='/richter'>Richter Scale</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react'\nimport Router from './Router'\nimport NavBar from '../src/components/navbar'\n\nclass App extends Component {\n   \n  render() {\n    return (\n      <div>\n        <NavBar />\n        <Router />\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter} from 'react-router-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <BrowserRouter><App /></BrowserRouter>, document.getElementById('root')\n)\n"],"sourceRoot":""}